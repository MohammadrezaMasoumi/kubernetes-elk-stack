#apiVersion: apps/v1beta1
#kind: StatefulSet
#metadata:
#  name: kafka
#spec:
#  serviceName: kafka-hs
#  replicas: 1
#  podManagementPolicy: Parallel
#  updateStrategy:
#      type: RollingUpdate
#  template:
#    metadata:
#      labels:
#        app: kafka
#    spec:
#      terminationGracePeriodSeconds: 300
#      containers:
#      - name: k8skafka
#        imagePullPolicy: Always
#        image: gcr.io/google_gcr.io/google_containers/kubernetes-kafkacontainers/kubernetes-kafka:1.0-10.2.1
#        resources:
#          requests:
#            memory: "12Gi"
#            cpu: 4
#        ports:
#        - containerPort: 9093
#          name: server
#        command:
#        - sh
#        - -c
#        - "exec kafka-server-start.sh /opt/kafka/config/server.properties --override broker.id=${HOSTNAME##*-} \
#          --override listeners=PLAINTEXT://:9093 \
#          --override kafka.connect=zk-cs.default.svc.cluster.local:2181 \
#          --override log.dir=/var/lib/kafka \
#          --override auto.create.topics.enable=true \
#          --override auto.leader.rebalance.enable=true \
#          --override background.threads=10 \
#          --override compression.type=producer \
#          --override delete.topic.enable=false \
#          --override leader.imbalance.check.interval.seconds=300 \
#          --override leader.imbalance.per.broker.percentage=10 \
#          --override log.flush.interval.messages=9223372036854775807 \
#          --override log.flush.offset.checkpoint.interval.ms=60000 \
#          --override log.flush.scheduler.interval.ms=9223372036854775807 \
#          --override log.retention.bytes=-1 \
#          --override log.retention.hours=168 \
#          --override log.roll.hours=168 \
#          --override log.roll.jitter.hours=0 \
#          --override log.segment.bytes=1073741824 \
#          --override log.segment.delete.delay.ms=60000 \
#          --override message.max.bytes=1000012 \
#          --override min.insync.replicas=1 \
#          --override num.io.threads=8 \
#          --override num.network.threads=3 \
#          --override num.recovery.threads.per.data.dir=1 \
#          --override num.replica.fetchers=1 \
#          --override offset.metadata.max.bytes=4096 \
#          --override offsets.commit.required.acks=-1 \
#          --override offsets.commit.timeout.ms=5000 \
#          --override offsets.load.buffer.size=5242880 \
#          --override offsets.retention.check.interval.ms=600000 \
#          --override offsets.retention.minutes=1440 \
#          --override offsets.topic.compression.codec=0 \
#          --override offsets.topic.num.partitions=50 \
#          --override offsets.topic.replication.factor=3 \
#          --override offsets.topic.segment.bytes=104857600 \
#          --override queued.max.requests=500 \
#          --override quota.consumer.default=9223372036854775807 \
#          --override quota.producer.default=9223372036854775807 \
#          --override replica.fetch.min.bytes=1 \
#          --override replica.fetch.wait.max.ms=500 \
#          --override replica.high.watermark.checkpoint.interval.ms=5000 \
#          --override replica.lag.time.max.ms=10000 \
#          --override replica.socket.receive.buffer.bytes=65536 \
#          --override replica.socket.timeout.ms=30000 \
#          --override request.timeout.ms=30000 \
#          --override socket.receive.buffer.bytes=102400 \
#          --override socket.request.max.bytes=104857600 \
#          --override socket.send.buffer.bytes=102400 \
#          --override unclean.leader.election.enable=true \
#          --override kafka.session.timeout.ms=6000 \
#          --override kafka.set.acl=false \
#          --override broker.id.generation.enable=true \
#          --override connections.max.idle.ms=600000 \
#          --override controlled.shutdown.enable=true \
#          --override controlled.shutdown.max.retries=3 \
#          --override controlled.shutdown.retry.backoff.ms=5000 \
#          --override controller.socket.timeout.ms=30000 \
#          --override default.replication.factor=1 \
#          --override fetch.purgatory.purge.interval.requests=1000 \
#          --override group.max.session.timeout.ms=300000 \
#          --override group.min.session.timeout.ms=6000 \
#          --override inter.broker.protocol.version=0.10.2-IV0 \
#          --override log.cleaner.backoff.ms=15000 \
#          --override log.cleaner.dedupe.buffer.size=134217728 \
#          --override log.cleaner.delete.retention.ms=86400000 \
#          --override log.cleaner.enable=true \
#          --override log.cleaner.io.buffer.load.factor=0.9 \
#          --override log.cleaner.io.buffer.size=524288 \
#          --override log.cleaner.io.max.bytes.per.second=1.7976931348623157E308 \
#          --override log.cleaner.min.cleanable.ratio=0.5 \
#          --override log.cleaner.min.compaction.lag.ms=0 \
#          --override log.cleaner.threads=1 \
#          --override log.cleanup.policy=delete \
#          --override log.index.interval.bytes=4096 \
#          --override log.index.size.max.bytes=10485760 \
#          --override log.message.timestamp.difference.max.ms=9223372036854775807 \
#          --override log.message.timestamp.type=CreateTime \
#          --override log.preallocate=false \
#          --override log.retention.check.interval.ms=300000 \
#          --override max.connections.per.ip=2147483647 \
#          --override num.partitions=1 \
#          --override producer.purgatory.purge.interval.requests=1000 \
#          --override replica.fetch.backoff.ms=1000 \
#          --override replica.fetch.max.bytes=1048576 \
#          --override replica.fetch.response.max.bytes=10485760 \
#          --override reserved.broker.max.id=1000 "
#        env:
#        - name: KAFKA_HEAP_OPTS
#          value : "-Xmx2G -Xms2G"
#        - name: KAFKA_OPTS
#          value: "-Dlogging.level=INFO"
#        volumeMounts:
#        - name: datadir
#          mountPath: /var/lib/kafka
#        readinessProbe:
#          exec:
#           command: 
#            - sh 
#            - -c 
#            - "/opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server=localhost:9093"
#      securityContext:
#        runAsUser: 1000
#        fsGroup: 1000
#  volumeClaimTemplates:
#  - metadata:
#      name: datadir
#    spec:
#      accessModes: [ "ReadWriteOnce" ]
#      resources:
#        requests:
#          storage: 10Gi
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-1
    env: prod
  name: kafka-1
  namespace: graylog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-1
  template:
    metadata:
      labels:
        app: kafka-1
        env: prod
    spec:
      containers:
      - name: kafka-1
        image: confluentinc/cp-kafka:7.0.1
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "false"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: 'zookeeper-1:2181'
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://yourworkernodeip:30100,PLAINTEXT_INTERNAL://kafka-advertise-1:29092"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        volumeMounts:
        - name: kafka1-data
          mountPath: /var/lib/kafka/data
      imagePullSecrets:
        - name: -repo
      tolerations:
      - key: app
        effect: NoSchedule
        operator: Equal 
        value: elk
      - key: app
        effect: NoExecute
        operator: Equal 
        value: elk
          #        resources:
          #          requests:
          #            memory: "12Gi"
          #        limits:
          #        ephemeral-storage: "4Gi"
          #          value: true
      initContainers:
      - name: init-sysctl
        image: /busybox
        command: ['sysctl', '-w', 'vm.max_map_count=262144']
        securityContext:
          privileged: true
      - name: fix-the-volume-permission
        image: /busybox
        command: ['sh', '-c', 'chmod 777 /var/lib/kafka/data']
        securityContext:
          privileged: true
        volumeMounts:
          - name: kafka1-data
            mountPath: /var/lib/kafka/data
      - name: increase-the-ulimit
        image: /busybox
        command: ['sh', '-c', 'ulimit -n 65536']
        securityContext:
          privileged: true
      volumes:
      - name: kafka1-data
        persistentVolumeClaim:
          claimName: kafka1-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-2
    env: prod
  name: kafka-2
  namespace: graylog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-2
  template:
    metadata:
      labels:
        app: kafka-2
        env: prod
    spec:
      containers:
      - name: kafka-2
        image: /confluentinc/cp-kafka:7.0.1
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "false"
        - name: KAFKA_BROKER_ID
          value: "2"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: 'zookeeper-1:2181'
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://youworkernodeip:30101,PLAINTEXT_INTERNAL://kafka-advertise-2:29091"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        volumeMounts:
        - name: kafka2-data
          mountPath: /var/lib/kafka/data
               
      imagePullSecrets:
        - name: -repo
      tolerations:
      - key: app
        effect: NoSchedule
        operator: Equal 
        value: elk
      - key: app
        effect: NoExecute
        operator: Equal 
        value: elk
          #        resources:
          #          requests:
          #            memory: "12Gi"
          #        limits:
          #        ephemeral-storage: "4Gi"
          #          value: true
      initContainers:
      - name: init-sysctl
        image: /busybox
        command: ['sysctl', '-w', 'vm.max_map_count=262144']
        securityContext:
          privileged: true
      - name: fix-the-volume-permission
        image: /busybox
        command: ['sh', '-c', 'chmod 777 /var/lib/kafka/data']
        securityContext:
          privileged: true
        volumeMounts:
          - name: kafka2-data
            mountPath: /var/lib/kafka/data
      - name: increase-the-ulimit
        image: /busybox
        command: ['sh', '-c', 'ulimit -n 65536']
        securityContext:
          privileged: true
      volumes:
      - name: kafka2-data
        persistentVolumeClaim:
          claimName: kafka2-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kafka-3
    env: prod
  name: kafka-3
  namespace: graylog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-3
  template:
    metadata:
      labels:
        app: kafka-3
        env: prod
    spec:
      containers:
      - name: kafka-3
        image: /confluentinc/cp-kafka:7.0.1
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "false"
        - name: KAFKA_BROKER_ID
          value: "3"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: 'zookeeper-1:2181'
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://yourworkernodeip:30103,PLAINTEXT_INTERNAL://kafka-advertise-3:29093"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
          value: "1"
        - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
          value: "1"
        volumeMounts:
        - name: kafka3-data
          mountPath: /var/lib/kafka/data
               
      imagePullSecrets:
        - name: -repo
      tolerations:
      - key: app
        effect: NoSchedule
        operator: Equal 
        value: elk
      - key: app
        effect: NoExecute
        operator: Equal 
        value: elk
          #        resources:
          #          requests:
          #            memory: "12Gi"
          #        limits:
          #        ephemeral-storage: "4Gi"
          #          value: true
      initContainers:
      - name: init-sysctl
        image: /busybox
        command: ['sysctl', '-w', 'vm.max_map_count=262144']
        securityContext:
          privileged: true
      - name: fix-the-volume-permission
        image: /busybox
        command: ['sh', '-c', 'chmod 777 /var/lib/kafka/data']
        securityContext:
          privileged: true
        volumeMounts:
          - name: kafka3-data
            mountPath: /var/lib/kafka/data
      - name: increase-the-ulimit
        image: /busybox
        command: ['sh', '-c', 'ulimit -n 65536']
        securityContext:
          privileged: true
      volumes:
      - name: kafka3-data
        persistentVolumeClaim:
          claimName: kafka3-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-advertise-1
  labels:
    app: kafka-1
  namespace: graylog
spec:
  type: ClusterIP
  ports:
  - name: broker
    port: 29092
    protocol: TCP
  - name: client
    port: 2181
    protocol: TCP
  - name: follower
    port: 30100
    protocol: TCP
  selector:
    app: kafka-1
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-advertise-2
  labels:
    app: kafka-2
  namespace: graylog
spec:
  type: ClusterIP
  ports:
  - name: broker
    port: 29091
    protocol: TCP
  - name: client
    port: 2181
    protocol: TCP
  - name: follower
    port: 30101
    protocol: TCP
  selector:
    app: kafka-2
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-advertise-3
  labels:
    app: kafka-3
  namespace: graylog
spec:
  type: ClusterIP
  ports:
  - name: broker
    port: 29093
    protocol: TCP
  - name: client
    port: 2181
    protocol: TCP
  - name: follower
    port: 30103
    protocol: TCP
  selector:
    app: kafka-1
---
apiVersion: v1
kind: Service
metadata:
  name: kafka1-nodeport
  namespace: graylog
spec:
  selector:
    app: kafka-1
  type: NodePort
  ports:
  - name: http
    port: 30100
    targetPort: 30100
    nodePort: 30100
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: kafka2-nodeport
  namespace: graylog
spec:
  selector:
    app: kafka-2
  type: NodePort
  ports:
  - name: http
    port: 30101
    targetPort: 30101
    nodePort: 30101
    protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: kafka3-nodeport
  namespace: graylog
spec:
  selector:
    app: kafka-3
  type: NodePort
  ports:
  - name: http
    port: 30103
    targetPort: 30103
    nodePort: 30103
    protocol: TCP
